
# ================================================
*[#]*
*~
*$py.class
abis/
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
bower_components
# Bower dependency directory (https://bower.io/)
/build
build/
build/Release
*/build
# Byte-compiled / optimized / DLL files
.cache
.cache/
celerybeat.pid
celerybeat-schedule
# celery beat schedule file
# Celery stuff
# C extensions
# Comment in the public line in if your project uses Gatsby and not Next.js
# Compiled binary addons (https://nodejs.org/api/addons.html)
# compiled output
*.cover
.coverage
.coverage.*
/coverage
coverage
coverage/
# Coverage directory used by tools like istanbul
coverage.json
coverage.xml
db.sqlite3
db.sqlite3-journal
# dependencies
# Dependency directories
deployed-contracts/
deployed-escrow-factory/
deployed-hmtoken/
deployed-kvstore/
# Deploying
develop-eggs/
# Diagnostic reports (https://nodejs.org/api/report.html)
# Directory for instrumented libs generated by jscoverage/JSCover
dist
dist/
# Distribution / packaging
# Django stuff:
.dmypy.json
dmypy.json
docker-compose
docs/_build/
.docusaurus
# Docusaurus cache and generated files
# dotenv
# dotenv environment variable files
downloads/
.DS_Store
.dynamodb/
# DynamoDB Local files
*.egg
*.egg-info/
.eggs/
eggs/
# emacs
# env
.env
.env.*
env/
ENV/
env.bak/
.env.development.local
# Environments
.env.local
.env.production.local
.env.test.local
.eslintcache
# Flask stuff:
.fusebox/
# FuseBox cache
ganache/build
# Gatsby files
generated/
# Generated stuff
.grunt
# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
het/secrets.json
contrat.addresses.json
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
htmlcov/
# https://nextjs.org/blog/next-9-1#public-directory-support
.hypothesis/
.idea
/.idea
# IDEs and editors
# IDE - VSCode
#   install all needed dependencies.
.installed.cfg
# Installer logs
instance/
.ipynb_checkpoints
# IPython
ipython_config.py
jspm_packages/
# Jupyter Notebook
*.lcov
lerna-debug.log*
lib/
lib64/
lib-cov
.lintstagedrc
local_settings.py
.lock-wscript
*.log
logs
# Logs
*.manifest
MANIFEST
# Microbundle cache
minio/
# misc
# mkdocs documentation
*.mo
# mypy
.mypy_cache/
.next
# Next.js build output
*node_modules
/node_modules
node_modules/
.node_repl_history
# node-waf configuration
nosetests.xml
.nox/
.npm
npm-debug.log*
.nuxt
# Nuxt.js build / generate output
.nyc_output
/.nyc_output
# nyc test coverage
# Optional eslint cache
# Optional npm cache directory
# Optional REPL history
# Optional stylelint cache
# OS
out
# Output of 'npm pack'
# parcel-bundler cache (https://parceljs.org/)
.parcel-cache
parts/
# PEP 582; used by e.g. github.com/David-OConnor/pyflow
pgadmin-data
pgdata
*.pid
*.pid.lock
pids
pip-delete-this-directory.txt
# pipenv
#Pipfile.lock
pip-log.txt
pip-wheel-metadata/
.pnp.*
/.pnp
.pnp.js
.pnpm-debug.log*
*.pot
# production
profile_default/
# public
# PyBuilder
__pycache__/
*.py[cod]
*.py,cover
# pyenv
# PyInstaller
__pypackages__/
.pyre/
# Pyre type checker
.pytest_cache/
.Python
.python-version
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json
reputation-oracle/data
.ropeproject
# Rope project settings
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/
# Runtime data
# SageMath parsed files
*.sage.py
.scrapy
# Scrapy stuff:
sdist/
*.seed
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
.serverless/
# Serverless directories
share/python-wheels/
/site
# Snowpack dependency directory (https://snowpack.dev/)
*.so
*.spec
# Sphinx documentation
.spyderproject
# Spyder project settings
.spyproject
# Stores VSCode versions used for testing VSCode extensions
.stylelintcache
*.swp
target/
.temp
# TernJS port file
.tern-port
# testing
# Tests
tests/.bin/
*.tgz
.tox/
# Translations
*.tsbuildinfo
# TypeScript cache
# Unit test / coverage reports
#  Usually these files are written by a python script from a template
var/
.venv
venv*
venv/
venv.bak/
# vim
# virtualenv
# VisualStudioCode
 ../.vscode/
.vscode
.vscode/*
.vscode/extensions.json
.vscode/launch.json
.vscode/settings.json
.vscode/tasks.json
.vscode-test
# vuepress build output
.vuepress/dist
# vuepress v2.x temp and cache directory
.webassets-cache
web_modules/
wheels/
.yarn/build-state.yml
.yarn/cache
yarn-debug.log*
yarn-error.log*
.yarn/install-state.gz
.yarn-integrity
# Yarn Integrity file
.yarn/unplugged
# yarn v2
artifacts/
cache/
typechain-types
