version: '3.7'

services:
  nginx:
    image: nginx
    extra_hosts:
        - "host.docker.internal:host-gateway"
    hostname: nginx
    container_name: nginx
    volumes:
    - ./nginx-config/:/etc/nginx/conf.d/:ro
    ports:
    - "80:80"
  
  ganache:
    image: trufflesuite/ganache-cli:v6.12.2
    container_name: ganache
    command: node /app/ganache-core.docker.cli.js --noVMErrorsOnRPCResponse --db=/ganache_data -m goat -i 1337 --hostname 0.0.0.0 --unlock 0x1413862c2b7054cdbfdc181b83962cb0fc11fd92 -g 1000 -v
    ports:
      - 8547:8545

  minio:
    image: minio/minio:RELEASE.2022-05-26T05-48-41Z
    ports:
      - 9001:9001
      - 9000:9000
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASS}
    volumes:
      - ./docker-manifest.json:/tmp/manifests/docker-manifest.json
    entrypoint: 'sh'
    command:
      -c "mkdir -p /data/manifests && cp /tmp/manifests/docker-manifest.json /data/manifests/manifest.json && minio server /data --console-address ':9001'"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 3
  minio-mc:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 dev devdevdev;
      /usr/bin/mc mb myminio/manifests;
      /usr/bin/mc anonymous set public myminio/manifests;
      "

  launcher:
    build:
      context: ./launcher
      args:
        PUBLIC_URL: ${LAUNCHER_PUBLIC_URL}
        HMT_ADDRESS: ${HMT_ADDRESS}
        ESCROW_FACTORY_ADDRESS: ${ESCROW_FACTORY_ADDRESS}
        REC_ORACLE_ADDRESS: ${REC_ORACLE_ADDRESS}
        REP_ORACLE_ADDRESS: ${REP_ORACLE_ADDRESS}
        EXCHANGE_ORACLE_ADDRESS: ${EXCHANGE_ORACLE_ADDRESS}
    ports:
      - 3000:3000
    command: ["yarn", "start-prod"]

  exchange:
    build:
      context: ./exchange
      args:
        PUBLIC_URL: ${EXCHANGE_PUBLIC_URL}
    ports:
      - 3001:3000
    command: ["yarn", "start-prod"]

  recording-oracle:
    build:
      context: ./recording-oracle
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      ETH_PRIVATE_KEY: ${RECORDING_ORACLE_PRIVATE_KEY}
      ETH_HTTP_SERVER: ${RPC}
      PORT: 3005
    command: ["yarn", "start"]
    ports:
      - 3005:3005

  reputation-oracle:
    build:
      context: ./reputation-oracle
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - 3006:3006
    environment:
      ETH_PRIVATE_KEY: ${REPUTATION_ORACLE_PRIVATE_KEY}
      ETH_HTTP_SERVER: ${RPC}
      MINIO_HOST: ${MINIO_HOST}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_ACCESS_KEY: ${MINIO_USER}
      MINIO_SECRET_KEY: ${MINIO_PASS}
      MINIO_BUCKET_NAME: job-results
      PORT: 3006
    command: ["yarn", "start"]
